### server:main section used by paster web server. More advanced,
### Python3 compatible circus setup configured using sections after
### app:main (circus, watcher:web, socket:web).

[server:main]
use = egg:{{ pulsar_server_egg | default('Paste#http') }}
## To use chaussette w/paster deploy (no circus), use follwoing: 
# use = egg:chaussette#main

## The port on which to listen.
port = {{ pulsar_port }}
## The hostname or IP address of the server.
host = {{ pulsar_host }}

## pem file to use to enable SSL. Set to * to generate one
## automatically.
{% if pulsar_ssl_pem is defined %}
ssl_pem = host.pem
{% endif %}

[app:main]
paste.app_factory = pulsar.web.wsgi:app_factory

app_config={{ pulsar_config_dir }}/app.yml

## Configure uWSGI (if used).
[uwsgi]
master = True
paste-logger = True
{% if pulsar_uwsgi_socket is defined %}
socket = {{ pulsar_uwsgi_socket }}
{% else %}
http = {{ pulsar_host }}:{{ pulsar_port }}
{% endif %}
processes = 1
enable-threads = True
{% for opt in pulsar_uwsgi_options %}
{{ opt }} = {{ pulsar_uwsgi_options[opt] }}
{% endfor %}


## Configure circus and chaussette (if used).
[circus]
endpoint = tcp://127.0.0.1:5555
pubsub_endpoint = tcp://127.0.0.1:5556
#stats_endpoint = tcp://127.0.0.1:5557                                                                                    

[watcher:web]
cmd = chaussette --fd $(circus.sockets.web) paste:server.ini
use_sockets = True
# Pulsar must be single-process for now...
numprocesses = 1


[socket:web]
host = localhost
port = 8913



## Configure Python loggers.
[loggers]
keys = root,pulsar

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_pulsar]
level = DEBUG
handlers = console
qualname = pulsar
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = DEBUG
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
